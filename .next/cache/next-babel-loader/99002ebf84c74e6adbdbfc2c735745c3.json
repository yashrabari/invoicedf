{"ast":null,"code":"import _defineProperty from \"C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kamlesh\\\\OneDrive\\\\Desktop\\\\ravi\\\\invoicedf\\\\front-end\\\\components\\\\Table\\\\FiltertingTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo } from 'react';\nimport { useTable, useFilters, useGlobalFilter } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns'; // import './table.css'\n\nimport { GlobalFilter } from './GlobalFilter';\nimport { ColumnFilter } from './ColumnFilter';\nexport var FilteringTable = function FilteringTable() {\n  _s();\n\n  var columns = useMemo(function () {\n    return COLUMNS;\n  }, []);\n  var data = useMemo(function () {\n    return MOCK_DATA;\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      Filter: ColumnFilter\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn\n  }, useFilters, useGlobalFilter),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      footerGroups = _useTable.footerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow,\n      state = _useTable.state,\n      setGlobalFilter = _useTable.setGlobalFilter;\n\n  var globalFilter = state.globalFilter;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, _this)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: rows.map(function (row) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 26\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(function (footerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, footerGroup.getFooterGroupProps()), {}, {\n            children: footerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, column.getFooterProps()), {}, {\n                children: column.render('Footer')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(FilteringTable, \"dAgAcjGlpiR38QIn7uB6vhvQf9Y=\", false, function () {\n  return [useTable];\n});\n\n_c = FilteringTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteringTable\");","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/components/Table/FiltertingTable.js"],"names":["React","useMemo","useTable","useFilters","useGlobalFilter","MOCK_DATA","COLUMNS","GlobalFilter","ColumnFilter","FilteringTable","columns","data","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable, useFilters, useGlobalFilter } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './columns'\n// import './table.css'\nimport { GlobalFilter } from './GlobalFilter'\nimport { ColumnFilter } from './ColumnFilter'\n\nexport const FilteringTable = () => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: ColumnFilter\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn\n    },\n    useFilters,\n    useGlobalFilter\n  )\n\n  const { globalFilter } = state\n\n  return (\n    <>\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n        <tfoot>\n          {footerGroups.map(footerGroup => (\n            <tr {...footerGroup.getFooterGroupProps()}>\n              {footerGroup.headers.map(column => (\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n              ))}\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}