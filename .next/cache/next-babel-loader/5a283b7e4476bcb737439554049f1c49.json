{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kamlesh\\\\OneDrive\\\\Desktop\\\\ravi\\\\invoicedf\\\\front-end\\\\components\\\\Table\\\\BasicTable.js\";\n// import React, { useMemo } from 'react'\n// import { useTable } from 'react-table'\n// import MOCK_DATA from './MOCK_DATA.json'\n// import { COLUMNS } from './columns'\n// // import './table.css'\n// import styled from 'styled-components'\n// export const BasicTable = () => {\n//   const columns = useMemo(() => COLUMNS, [])\n//   const data = useMemo(() => MOCK_DATA, [])\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     footerGroups,\n//     rows,\n//     prepareRow\n//   } = useTable({\n//     columns,\n//     data\n//   })\n//   return (\n//     <>\n//       <table className='table'>\n//         <thead className='hover'>\n//           {headerGroups.map(headerGroup => (\n//             <tr className='tr'{...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map(column => (\n//                 <th className='th'{...column.getHeaderProps()}>{column.render('Header')}</th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <scrollView horizo> \n//           <tbody  >\n//             {/* {rows.map(row => {\n//             prepareRow(row)\n//             return ( */}\n//             {/* <tr className='tr' {...row.getRowProps()}> */}\n//             {/* {row.cells.map(cell => { */}\n//             <tr className='tr'>\n//               <th></th>\n//               <th>\n//                 <input\n//                   // {changes}\n//                   // value={companyData ? companyData.gst_number : \"\"}\n//                   // className=\"form-control\"\n//                   // readOnly={true}\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <th>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               {/* })} */}\n//             </tr>\n//             {/* ) */}\n//             {/* })} */}\n//           </tbody>\n//         </scrollView>\n//         {/* <tfoot >\n//           {footerGroups.map(footerGroup => (\n//             <tr {...footerGroup.getFooterGroupProps()}>\n//               {footerGroup.headers.map(column => (\n//                 <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tfoot> */}\n//       </table>\n//     </>\n//   )\n// }\n// export const Styles = styled.div`\n//   .table {\n//     border: 1px solid #ddd;\n//     .tr {\n//       :last-child {\n//         .td {\n//           border-bottom: 0;\n//         }\n//       }\n//     }\n//     .th,\n//     .td {\n//       padding: 5px;\n//       border-bottom: 1px solid #ddd;\n//       border-right: 1px solid #ddd;\n//       background-color: #fff;\n//       overflow: hidden;\n//       :last-child {\n//         border-right: 0;\n//       }\n//     }\n//     &.sticky {\n//       overflow: scroll;\n//       .header,\n//       .footer {\n//         position: sticky;\n//         z-index: 1;\n//         width: fit-content;\n//       }\n//       .header {\n//         top: 0;\n//         box-shadow: 0px 3px 3px #ccc;\n//       }\n//       .footer {\n//         bottom: 0;\n//         box-shadow: 0px -3px 3px #ccc;\n//       }\n//       .body {\n//         position: relative;\n//         z-index: 0;\n//       }\n//       [data-sticky-td] {\n//         position: sticky;\n//       }\n//       [data-sticky-last-left-td] {\n//         box-shadow: 2px 0px 3px #ccc;\n//       }\n//       [data-sticky-first-right-td] {\n//         box-shadow: -2px 0px 3px #ccc;\n//       }\n//     }\n//   }\n// `\nimport React, { useState } from 'react'; // import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import RemoveIcon from '@material-ui/icons/Remove';\n// import AddIcon from '@material-ui/icons/Add';\n// import Icon from '@material-ui/core/Icon';\n\nimport { v4 as uuidv4 } from 'uuid'; // import { makeStyles } from '@material-ui/core/styles';\n\nexport const BasicTable = () => {\n  // const classes = useStyles()\n  const {\n    0: inputFields,\n    1: setInputFields\n  } = useState([{\n    id: uuidv4(),\n    firstName: '',\n    lastName: ''\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, {\n      id: uuidv4(),\n      firstName: '',\n      lastName: ''\n    }]);\n  };\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      onSubmit: handleSubmit,\n      children: [inputFields.map(inputField => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"firstName\",\n          label: \"First Name\",\n          variant: \"filled\",\n          value: inputField.firstName,\n          onChange: event => handleChangeInput(inputField.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"lastName\",\n          label: \"Last Name\",\n          variant: \"filled\",\n          value: inputField.lastName,\n          onChange: event => handleChangeInput(inputField.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: inputFields.length === 1,\n          onClick: () => handleRemoveFields(inputField.id),\n          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleAddFields,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, inputField.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        endIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 20\n        }, this),\n        onClick: handleSubmit,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/components/Table/BasicTable.js"],"names":["React","useState","v4","uuidv4","BasicTable","inputFields","setInputFields","id","firstName","lastName","handleSubmit","e","preventDefault","console","log","handleChangeInput","event","newInputFields","map","i","target","name","value","handleAddFields","handleRemoveFields","values","splice","findIndex","classes","root","inputField","length","button"],"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","sourcesContent":["// import React, { useMemo } from 'react'\n// import { useTable } from 'react-table'\n// import MOCK_DATA from './MOCK_DATA.json'\n// import { COLUMNS } from './columns'\n// // import './table.css'\n// import styled from 'styled-components'\n\n// export const BasicTable = () => {\n//   const columns = useMemo(() => COLUMNS, [])\n//   const data = useMemo(() => MOCK_DATA, [])\n\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     footerGroups,\n//     rows,\n//     prepareRow\n//   } = useTable({\n//     columns,\n//     data\n//   })\n\n//   return (\n//     <>\n//       <table className='table'>\n\n//         <thead className='hover'>\n//           {headerGroups.map(headerGroup => (\n//             <tr className='tr'{...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map(column => (\n//                 <th className='th'{...column.getHeaderProps()}>{column.render('Header')}</th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <scrollView horizo> \n//           <tbody  >\n//             {/* {rows.map(row => {\n//             prepareRow(row)\n//             return ( */}\n//             {/* <tr className='tr' {...row.getRowProps()}> */}\n//             {/* {row.cells.map(cell => { */}\n//             <tr className='tr'>\n//               <th></th>\n//               <th>\n//                 <input\n//                   // {changes}\n//                   // value={companyData ? companyData.gst_number : \"\"}\n//                   // className=\"form-control\"\n//                   // readOnly={true}\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <th>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               {/* })} */}\n//             </tr>\n//             {/* ) */}\n//             {/* })} */}\n//           </tbody>\n//         </scrollView>\n//         {/* <tfoot >\n//           {footerGroups.map(footerGroup => (\n//             <tr {...footerGroup.getFooterGroupProps()}>\n//               {footerGroup.headers.map(column => (\n//                 <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tfoot> */}\n//       </table>\n//     </>\n//   )\n// }\n\n// export const Styles = styled.div`\n//   .table {\n//     border: 1px solid #ddd;\n\n//     .tr {\n//       :last-child {\n//         .td {\n//           border-bottom: 0;\n//         }\n//       }\n//     }\n\n//     .th,\n//     .td {\n//       padding: 5px;\n//       border-bottom: 1px solid #ddd;\n//       border-right: 1px solid #ddd;\n//       background-color: #fff;\n//       overflow: hidden;\n\n//       :last-child {\n//         border-right: 0;\n//       }\n//     }\n\n//     &.sticky {\n//       overflow: scroll;\n//       .header,\n//       .footer {\n//         position: sticky;\n//         z-index: 1;\n//         width: fit-content;\n//       }\n\n//       .header {\n//         top: 0;\n//         box-shadow: 0px 3px 3px #ccc;\n//       }\n\n//       .footer {\n//         bottom: 0;\n//         box-shadow: 0px -3px 3px #ccc;\n//       }\n\n//       .body {\n//         position: relative;\n//         z-index: 0;\n//       }\n\n//       [data-sticky-td] {\n//         position: sticky;\n//       }\n\n//       [data-sticky-last-left-td] {\n//         box-shadow: 2px 0px 3px #ccc;\n//       }\n\n//       [data-sticky-first-right-td] {\n//         box-shadow: -2px 0px 3px #ccc;\n//       }\n//     }\n//   }\n// `\nimport React, { useState } from 'react';\n// import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import RemoveIcon from '@material-ui/icons/Remove';\n// import AddIcon from '@material-ui/icons/Add';\n// import Icon from '@material-ui/core/Icon';\nimport { v4 as uuidv4 } from 'uuid';\n\n// import { makeStyles } from '@material-ui/core/styles';\n\n\n\nexport const BasicTable = () => {\n  // const classes = useStyles()\n  const [inputFields, setInputFields] = useState([\n    { id: uuidv4(), firstName: '', lastName: '' },\n  ]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if(id === i.id) {\n        i[event.target.name] = event.target.value\n      }\n      return i;\n    })\n    \n    setInputFields(newInputFields);\n  }\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { id: uuidv4(),  firstName: '', lastName: '' }])\n  }\n\n  const handleRemoveFields = id => {\n    const values  = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  }\n\n  return (\n    <section>\n      <h1>Add New Member</h1>\n      <form className={classes.root} onSubmit={handleSubmit}>\n        { inputFields.map(inputField => (\n          <div key={inputField.id}>\n            <TextField\n              name=\"firstName\"\n              label=\"First Name\"\n              variant=\"filled\"\n              value={inputField.firstName}\n              onChange={event => handleChangeInput(inputField.id, event)}\n            />\n            <TextField\n              name=\"lastName\"\n              label=\"Last Name\"\n              variant=\"filled\"\n              value={inputField.lastName}\n              onChange={event => handleChangeInput(inputField.id, event)}\n            />\n            <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\n              <RemoveIcon />\n            </IconButton>\n            <IconButton\n              onClick={handleAddFields}\n            >\n              <AddIcon />\n            </IconButton>\n          </div>\n        )) }\n        <Button\n          className={classes.button}\n          variant=\"contained\" \n          color=\"primary\" \n          type=\"submit\" \n          endIcon={<Icon>send</Icon>}\n          onClick={handleSubmit}\n        >Send</Button>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}