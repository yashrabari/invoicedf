{"ast":null,"code":"import _defineProperty from \"C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kamlesh\\\\OneDrive\\\\Desktop\\\\ravi\\\\invoicedf\\\\front-end\\\\components\\\\Table\\\\BasicTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns'; //  import './table.css'\n\nexport var BasicTable = function BasicTable() {\n  _s();\n\n  var columns = useMemo(function () {\n    return COLUMNS;\n  }, []);\n  var data = useMemo(function () {\n    return MOCK_DATA;\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      footerGroups = _useTable.footerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        fontFamily: 'Trebuchet MS',\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({\n            style: {\n              backgroundColor: \"#ddd\"\n            }\n          }, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({\n                style: {\n                  border: \"1px\",\n                  borderColor: \"#ddd\",\n                  padding: \"8px\"\n                }\n              }, column.getHeaderProps()), {}, {\n                children: column.render('Header')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map(function (row) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 26\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(function (footerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, footerGroup.getFooterGroupProps()), {}, {\n            children: footerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, column.getFooterProps()), {}, {\n                children: column.render('Footer')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(BasicTable, \"4Qya+w4qtV0BLZ5uS6jR1QvZsO4=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/components/Table/BasicTable.js"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","BasicTable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","fontFamily","width","map","headerGroup","backgroundColor","getHeaderGroupProps","headers","column","border","borderColor","padding","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './columns'\n//  import './table.css'\n\nexport const BasicTable = () => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  })\n\n  return (\n    <>\n      <table style={{\n        fontFamily: 'Trebuchet MS',\n        width: \"100%\"\n      }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr style={{\n  backgroundColor: \"#ddd\",\n}}\n{...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th style={{\n                  border: \"1px\",\n                  borderColor: \"#ddd\",\n                  padding: \"8px\",\n                }} {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody >\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n        <tfoot>\n          {footerGroups.map(footerGroup => (\n            <tr {...footerGroup.getFooterGroupProps()}>\n              {footerGroup.headers.map(column => (\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n              ))}\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}