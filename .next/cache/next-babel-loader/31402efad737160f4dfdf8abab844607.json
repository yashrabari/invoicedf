{"ast":null,"code":"import _defineProperty from \"C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kamlesh\\\\OneDrive\\\\Desktop\\\\ravi\\\\invoicedf\\\\front-end\\\\components\\\\Table\\\\BasicTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { useMemo } from 'react'\n// import { useTable } from 'react-table'\n// import MOCK_DATA from './MOCK_DATA.json'\n// import { COLUMNS } from './columns'\n// // import './table.css'\n// import styled from 'styled-components'\n// export const BasicTable = () => {\n//   const columns = useMemo(() => COLUMNS, [])\n//   const data = useMemo(() => MOCK_DATA, [])\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     footerGroups,\n//     rows,\n//     prepareRow\n//   } = useTable({\n//     columns,\n//     data\n//   })\n//   return (\n//     <>\n//       <table className='table'>\n//         <thead className='hover'>\n//           {headerGroups.map(headerGroup => (\n//             <tr className='tr'{...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map(column => (\n//                 <th className='th'{...column.getHeaderProps()}>{column.render('Header')}</th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <scrollView horizo> \n//           <tbody  >\n//             {/* {rows.map(row => {\n//             prepareRow(row)\n//             return ( */}\n//             {/* <tr className='tr' {...row.getRowProps()}> */}\n//             {/* {row.cells.map(cell => { */}\n//             <tr className='tr'>\n//               <th></th>\n//               <th>\n//                 <input\n//                   // {changes}\n//                   // value={companyData ? companyData.gst_number : \"\"}\n//                   // className=\"form-control\"\n//                   // readOnly={true}\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <th>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               {/* })} */}\n//             </tr>\n//             {/* ) */}\n//             {/* })} */}\n//           </tbody>\n//         </scrollView>\n//         {/* <tfoot >\n//           {footerGroups.map(footerGroup => (\n//             <tr {...footerGroup.getFooterGroupProps()}>\n//               {footerGroup.headers.map(column => (\n//                 <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tfoot> */}\n//       </table>\n//     </>\n//   )\n// }\n// export const Styles = styled.div`\n//   .table {\n//     border: 1px solid #ddd;\n//     .tr {\n//       :last-child {\n//         .td {\n//           border-bottom: 0;\n//         }\n//       }\n//     }\n//     .th,\n//     .td {\n//       padding: 5px;\n//       border-bottom: 1px solid #ddd;\n//       border-right: 1px solid #ddd;\n//       background-color: #fff;\n//       overflow: hidden;\n//       :last-child {\n//         border-right: 0;\n//       }\n//     }\n//     &.sticky {\n//       overflow: scroll;\n//       .header,\n//       .footer {\n//         position: sticky;\n//         z-index: 1;\n//         width: fit-content;\n//       }\n//       .header {\n//         top: 0;\n//         box-shadow: 0px 3px 3px #ccc;\n//       }\n//       .footer {\n//         bottom: 0;\n//         box-shadow: 0px -3px 3px #ccc;\n//       }\n//       .body {\n//         position: relative;\n//         z-index: 0;\n//       }\n//       [data-sticky-td] {\n//         position: sticky;\n//       }\n//       [data-sticky-last-left-td] {\n//         box-shadow: 2px 0px 3px #ccc;\n//       }\n//       [data-sticky-first-right-td] {\n//         box-shadow: -2px 0px 3px #ccc;\n//       }\n//     }\n//   }\n// `\nimport React, { useState, useMemo } from 'react'; // import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import RemoveIcon from '@material-ui/icons/Remove';\n// import AddIcon from '@material-ui/icons/Add';\n// import Icon from '@material-ui/core/Icon';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns';\nimport { useTable } from 'react-table'; // import { makeStyles } from '@material-ui/core/styles';\n\nexport var BasicTable = function BasicTable() {\n  _s();\n\n  var columns = useMemo(function () {\n    return COLUMNS;\n  }, []);\n  var data = useMemo(function () {\n    return MOCK_DATA;\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      footerGroups = _useTable.footerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow; // const classes = useStyles()\n\n\n  var _useState = useState([{\n    id: uuidv4(),\n    firstName: '',\n    lastName: ''\n  }]),\n      inputFields = _useState[0],\n      setInputFields = _useState[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  var handleChangeInput = function handleChangeInput(id, event) {\n    var newInputFields = inputFields.map(function (i) {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setInputFields(newInputFields);\n  };\n\n  var handleAddFields = function handleAddFields() {\n    setInputFields([].concat(_toConsumableArray(inputFields), [{\n      id: uuidv4(),\n      firstName: '',\n      lastName: ''\n    }]));\n  };\n\n  var handleRemoveFields = function handleRemoveFields(id) {\n    var values = _toConsumableArray(inputFields);\n\n    values.splice(values.findIndex(function (value) {\n      return value.id === id;\n    }), 1);\n    setInputFields(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"hover\",\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({\n            className: \"tr\"\n          }, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({\n                className: \"th\"\n              }, column.getHeaderProps()), {}, {\n                children: column.render('Header')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, _this), inputFields.map(function (inputField) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"hi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: 40\n              },\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              label: \"Last Name\",\n              variant: \"filled\",\n              value: inputField.lastName,\n              onChange: function onChange(event) {\n                return handleChangeInput(inputField.id, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 27\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: inputFields.length === 1,\n            onClick: function onClick() {\n              return handleRemoveFields(inputField.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 23\n          }, _this)]\n        }, inputField.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        // className={classes.button}\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\" // endIcon={<Icon>send</Icon>}\n        ,\n        onClick: handleSubmit,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(BasicTable, \"+3sgTAh+ChVtkaptJgiC3n+GPHk=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/components/Table/BasicTable.js"],"names":["React","useState","useMemo","v4","uuidv4","MOCK_DATA","COLUMNS","useTable","BasicTable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","id","firstName","lastName","inputFields","setInputFields","handleSubmit","e","preventDefault","console","log","handleChangeInput","event","newInputFields","map","i","target","name","value","handleAddFields","handleRemoveFields","values","splice","findIndex","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","inputField","width","length"],"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","sourcesContent":["// import React, { useMemo } from 'react'\n// import { useTable } from 'react-table'\n// import MOCK_DATA from './MOCK_DATA.json'\n// import { COLUMNS } from './columns'\n// // import './table.css'\n// import styled from 'styled-components'\n\n// export const BasicTable = () => {\n//   const columns = useMemo(() => COLUMNS, [])\n//   const data = useMemo(() => MOCK_DATA, [])\n\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     footerGroups,\n//     rows,\n//     prepareRow\n//   } = useTable({\n//     columns,\n//     data\n//   })\n\n//   return (\n//     <>\n//       <table className='table'>\n\n//         <thead className='hover'>\n//           {headerGroups.map(headerGroup => (\n//             <tr className='tr'{...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map(column => (\n//                 <th className='th'{...column.getHeaderProps()}>{column.render('Header')}</th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <scrollView horizo> \n//           <tbody  >\n//             {/* {rows.map(row => {\n//             prepareRow(row)\n//             return ( */}\n//             {/* <tr className='tr' {...row.getRowProps()}> */}\n//             {/* {row.cells.map(cell => { */}\n//             <tr className='tr'>\n//               <th></th>\n//               <th>\n//                 <input\n//                   // {changes}\n//                   // value={companyData ? companyData.gst_number : \"\"}\n//                   // className=\"form-control\"\n//                   // readOnly={true}\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <th>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter product name...\"\n//                 />\n//               </th>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               <td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td><td className='td'>\n//                 <input\n//                   type=\"number\"\n//                 />\n//               </td>\n//               {/* })} */}\n//             </tr>\n//             {/* ) */}\n//             {/* })} */}\n//           </tbody>\n//         </scrollView>\n//         {/* <tfoot >\n//           {footerGroups.map(footerGroup => (\n//             <tr {...footerGroup.getFooterGroupProps()}>\n//               {footerGroup.headers.map(column => (\n//                 <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tfoot> */}\n//       </table>\n//     </>\n//   )\n// }\n\n// export const Styles = styled.div`\n//   .table {\n//     border: 1px solid #ddd;\n\n//     .tr {\n//       :last-child {\n//         .td {\n//           border-bottom: 0;\n//         }\n//       }\n//     }\n\n//     .th,\n//     .td {\n//       padding: 5px;\n//       border-bottom: 1px solid #ddd;\n//       border-right: 1px solid #ddd;\n//       background-color: #fff;\n//       overflow: hidden;\n\n//       :last-child {\n//         border-right: 0;\n//       }\n//     }\n\n//     &.sticky {\n//       overflow: scroll;\n//       .header,\n//       .footer {\n//         position: sticky;\n//         z-index: 1;\n//         width: fit-content;\n//       }\n\n//       .header {\n//         top: 0;\n//         box-shadow: 0px 3px 3px #ccc;\n//       }\n\n//       .footer {\n//         bottom: 0;\n//         box-shadow: 0px -3px 3px #ccc;\n//       }\n\n//       .body {\n//         position: relative;\n//         z-index: 0;\n//       }\n\n//       [data-sticky-td] {\n//         position: sticky;\n//       }\n\n//       [data-sticky-last-left-td] {\n//         box-shadow: 2px 0px 3px #ccc;\n//       }\n\n//       [data-sticky-first-right-td] {\n//         box-shadow: -2px 0px 3px #ccc;\n//       }\n//     }\n//   }\n// `\nimport React, { useState, useMemo } from 'react';\n// import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import RemoveIcon from '@material-ui/icons/Remove';\n// import AddIcon from '@material-ui/icons/Add';\n// import Icon from '@material-ui/core/Icon';\nimport { v4 as uuidv4 } from 'uuid';\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './columns'\n\nimport { useTable } from 'react-table'\n// import { makeStyles } from '@material-ui/core/styles';\n\n\n\nexport const BasicTable = () => {\n\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  })\n  // const classes = useStyles()\n  const [inputFields, setInputFields] = useState([\n    { id: uuidv4(), firstName: '', lastName: '' },\n  ]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value\n      }\n      return i;\n    })\n\n    setInputFields(newInputFields);\n  }\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { id: uuidv4(), firstName: '', lastName: '' }])\n  }\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  }\n\n  return (\n    <>\n      <table className='table' onSubmit={handleSubmit}>\n\n        <thead className='hover'>\n          {headerGroups.map(headerGroup => (\n            <tr className='tr'{...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th className='th'{...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n       \n            \n                \n                {\n                  inputFields.map(inputField => (\n                    <tr key={inputField.id}>\n                      <th>hi</th>\n                      <th><input \n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                      style={{\n                        width:40\n                      }}\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <th><input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        variant=\"filled\"\n                        value={inputField.lastName}\n                        onChange={event => handleChangeInput(inputField.id, event)}\n                      /></th>\n                      <button disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\n                        {/* <RemoveIcon /> */}\n                      </button>\n                      <button\n                        onClick={handleAddFields}\n                      >\n                        {/* <AddIcon /> */}\n                      </button>\n                    </tr>\n                  ))\n                }\n                \n\n      \n                <button\n                  // className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  // endIcon={<Icon>send</Icon>}\n                  onClick={handleSubmit}\n                >Send</button>\n      </table>\n    </>\n      );\n}\n"]},"metadata":{},"sourceType":"module"}