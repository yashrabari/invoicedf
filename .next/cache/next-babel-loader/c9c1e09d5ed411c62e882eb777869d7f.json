{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kamlesh\\\\OneDrive\\\\Desktop\\\\ravi\\\\invoicedf\\\\front-end\\\\components\\\\Table\\\\BasicTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns'; //  import './table.css'\n\nexport const BasicTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        fontFamily: 'Trebuchet MS',\n        borderCollapse: collapse,\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n            children: column.render('Header')\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 26\n              }, this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, footerGroup.getFooterGroupProps()), {}, {\n          children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, column.getFooterProps()), {}, {\n            children: column.render('Footer')\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/components/Table/BasicTable.js"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","BasicTable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","fontFamily","borderCollapse","collapse","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMG,IAAI,GAAGN,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAM;AACJK,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA;AANI,MAOFX,QAAQ,CAAC;AACXI,IAAAA,OADW;AAEXC,IAAAA;AAFW,GAAD,CAPZ;AAYA,sBACE;AAAA,2BACE;AAAO,MAAA,KAAK,EAAE;AACZO,QAAAA,UAAU,EAAE,cADA;AAGZC,QAAAA,cAAc,EAAEC,QAHJ;AAIZC,QAAAA,KAAK,EAAE;AAJK,OAAd;AAAA,8BAME;AAAA,kBACGP,YAAY,CAACQ,GAAb,CAAiBC,WAAW,iBAC3B,8CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,8CAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAeE;AAAA,kBACGZ,IAAI,CAACM,GAAL,CAASO,GAAG,IAAI;AACfZ,UAAAA,UAAU,CAACY,GAAD,CAAV;AACA,8BACE,8CAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAcU,IAAI,IAAI;AACrB,kCAAO,8CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAfF,eA2BE;AAAA,kBACGb,YAAY,CAACO,GAAb,CAAiBY,WAAW,iBAC3B,8CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACT,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,8CAAQA,MAAM,CAACU,cAAP,EAAR;AAAA,sBAAkCV,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyCD,CAzDM","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './columns'\n//  import './table.css'\n\nexport const BasicTable = () => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  })\n\n  return (\n    <>\n      <table style={{\n        fontFamily: 'Trebuchet MS',\n        \n        borderCollapse: collapse,\n        width: \"100%\"\n}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody >\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n        <tfoot>\n          {footerGroups.map(footerGroup => (\n            <tr {...footerGroup.getFooterGroupProps()}>\n              {footerGroup.headers.map(column => (\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n              ))}\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}