{"ast":null,"code":"import _defineProperty from \"C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Kamlesh\\\\OneDrive\\\\Desktop\\\\ravi\\\\invoicedf\\\\front-end\\\\components\\\\Table\\\\BasicTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns';\nimport './table.css';\nexport var BasicTable = function BasicTable() {\n  _s();\n\n  var columns = useMemo(function () {\n    return COLUMNS;\n  }, []);\n  var data = useMemo(function () {\n    return MOCK_DATA;\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      footerGroups = _useTable.footerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread({}, getTableBodyProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tfoot\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(BasicTable, \"4Qya+w4qtV0BLZ5uS6jR1QvZsO4=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/components/Table/BasicTable.js"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","BasicTable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,aAAP;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAC9B,MAAMC,OAAO,GAAGL,OAAO,CAAC;AAAA,WAAMG,OAAN;AAAA,GAAD,EAAgB,EAAhB,CAAvB;AACA,MAAMG,IAAI,GAAGN,OAAO,CAAC;AAAA,WAAME,SAAN;AAAA,GAAD,EAAkB,EAAlB,CAApB;;AAF8B,kBAW1BD,QAAQ,CAAC;AACXI,IAAAA,OAAO,EAAPA,OADW;AAEXC,IAAAA,IAAI,EAAJA;AAFW,GAAD,CAXkB;AAAA,MAK5BC,aAL4B,aAK5BA,aAL4B;AAAA,MAM5BC,iBAN4B,aAM5BA,iBAN4B;AAAA,MAO5BC,YAP4B,aAO5BA,YAP4B;AAAA,MAQ5BC,YAR4B,aAQ5BA,YAR4B;AAAA,MAS5BC,IAT4B,aAS5BA,IAT4B;AAAA,MAU5BC,UAV4B,aAU5BA,UAV4B;;AAgB9B,sBACE;AAAA,2BACE,iDAAWL,aAAa,EAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,eADF,eAUE,mCAAWC,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA,eAVF,eAsBE;AAAA;AAAA;AAAA;AAAA,eAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoCD,CApDM;;GAAMJ,U;UAWPH,Q;;;KAXOG,U","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './columns'\nimport './table.css'\n\nexport const BasicTable = () => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  })\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {/* {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))} */}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {/* {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })} */}\n        </tbody>\n        <tfoot>\n          {/* {footerGroups.map(footerGroup => (\n            <tr {...footerGroup.getFooterGroupProps()}>\n              {footerGroup.headers.map(column => (\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n              ))}\n            </tr>\n          ))} */}\n        </tfoot>\n      </table>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}