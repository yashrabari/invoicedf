{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs';\nimport decode from 'jwt-decode';\nconst instance = axios.create({\n  baseURL: \"http://178.18.250.242:1337\"\n});\ninstance.interceptors.request.use(async config => {\n  const accessToken = 'Bearer ' + localStorage.getItem('accessToken');\n\n  if (localStorage.getItem('accessToken')) {\n    config.headers.Authorization = accessToken ? accessToken : '';\n  }\n\n  return config;\n});\nexport const login = async (email, password) => await axios.post('http://178.18.250.242:1337/auth/local', {\n  identifier: email,\n  password\n});\nexport const getProducts = async () => {\n  return await instance.get('products');\n};\nexport const getCustomers = async () => {\n  const query = qs.stringify({\n    _where: {\n      _or: [{\n        stars: 1\n      }, {\n        pricing_gt: 30\n      }]\n    }\n  });\n  return await instance.get('customers?');\n};\nexport const postCustomers = async data => {\n  return await instance.post('customers', data);\n};","map":{"version":3,"sources":["/home/invoceDF/front-end/networks/api.js"],"names":["axios","qs","decode","instance","create","baseURL","interceptors","request","use","config","accessToken","localStorage","getItem","headers","Authorization","login","email","password","post","identifier","getProducts","get","getCustomers","query","stringify","_where","_or","stars","pricing_gt","postCustomers","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,MAAOC,MAAP,IAAkB;AAChD,QAAMC,WAAW,GAAG,YAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAhC;;AACA,MAAID,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AAErCH,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgCJ,WAAW,GAAGA,WAAH,GAAiB,EAA5D;AACH;;AACD,SAAOD,MAAP;AACH,CAPD;AASA,OAAO,MAAMM,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KACjB,MAAMjB,KAAK,CAACkB,IAAN,CAAW,uCAAX,EAAoD;AAAEC,EAAAA,UAAU,EAAEH,KAAd;AAAqBC,EAAAA;AAArB,CAApD,CADH;AAGP,OAAO,MAAMG,WAAW,GAAG,YAAY;AACnC,SAAO,MAAMjB,QAAQ,CAACkB,GAAT,CAAa,UAAb,CAAb;AACH,CAFM;AAGP,OAAO,MAAMC,YAAY,GAAG,YAAY;AACpC,QAAMC,KAAK,GAAGtB,EAAE,CAACuB,SAAH,CAAa;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAe;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAf;AAAP;AAAV,GAAb,CAAd;AACA,SAAO,MAAMzB,QAAQ,CAACkB,GAAT,CAAa,YAAb,CAAb;AACH,CAHM;AAIP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,IAAP,IAAgB;AACzC,SAAO,MAAM3B,QAAQ,CAACe,IAAT,CAAc,WAAd,EAA2BY,IAA3B,CAAb;AACH,CAFM","sourcesContent":["import axios from 'axios';\nimport qs from 'qs'\nimport decode from 'jwt-decode'\n\nconst instance = axios.create({\n    baseURL: \"http://178.18.250.242:1337\",\n});\n\ninstance.interceptors.request.use(async (config) => {\n    const accessToken = 'Bearer ' + localStorage.getItem('accessToken');\n    if (localStorage.getItem('accessToken')) {\n\n        config.headers.Authorization = (accessToken ? accessToken : '');\n    }\n    return config;\n});\n\nexport const login = async (email, password) => (\n    await axios.post('http://178.18.250.242:1337/auth/local', { identifier: email, password })\n);\nexport const getProducts = async () => {\n    return await instance.get('products')\n}\nexport const getCustomers = async () => {\n    const query = qs.stringify({ _where: { _or: [{ stars: 1 }, { pricing_gt: 30 }] } });\n    return await instance.get('customers?')\n}\nexport const postCustomers = async (data) => {\n    return await instance.post('customers', data)\n}\n"]},"metadata":{},"sourceType":"module"}