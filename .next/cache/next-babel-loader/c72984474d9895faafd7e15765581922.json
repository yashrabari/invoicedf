{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nimport { createWrapper } from 'next-redux-wrapper';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nexport var makeStore = function makeStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport var wrapper = createWrapper(makeStore, {\n  debug: false\n});\n/*\r\nconst persistConfig = {\r\n    key: 'martfury',\r\n    storage,\r\n    whitelist: ['cart', 'compare', 'auth', 'wishlist'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(\r\n        persistedReducer,\r\n        initialState,\r\n        bindMiddleware([sagaMiddleware])\r\n    );\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nexport default configureStore;\r\n*/","map":{"version":3,"sources":["C:/Users/Kamlesh/OneDrive/Desktop/ravi/invoicedf/front-end/store/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","persistReducer","storage","rootReducer","rootSaga","createWrapper","bindMiddleware","middleware","require","composeWithDevTools","makeStore","context","sagaMiddleware","store","sagaTask","run","wrapper","debug"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACnC,YAA2C;AAAA,mBACPC,OAAO,CAAC,0BAAD,CADA;AAAA,QAC/BC,mBAD+B,YAC/BA,mBAD+B;;AAEvC,WAAOA,mBAAmB,CAACX,eAAe,MAAf,4BAAmBS,UAAnB,EAAD,CAA1B;AACH;;AACD,SAAOT,eAAe,MAAf,4BAAmBS,UAAnB,EAAP;AACH,CAND;;AAQA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAClC,MAAMC,cAAc,GAAGZ,oBAAoB,EAA3C;AACA,MAAMa,KAAK,GAAGd,WAAW,CAACI,WAAD,EAAcG,cAAc,CAAC,CAACM,cAAD,CAAD,CAA5B,CAAzB;AAEAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBX,QAAnB,CAAjB;AAEA,SAAOS,KAAP;AACH,CAPM;AASP,OAAO,IAAMG,OAAO,GAAGX,aAAa,CAACK,SAAD,EAAY;AAAEO,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\n\r\nconst bindMiddleware = (middleware) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const { composeWithDevTools } = require('redux-devtools-extension');\r\n        return composeWithDevTools(applyMiddleware(...middleware));\r\n    }\r\n    return applyMiddleware(...middleware);\r\n};\r\n\r\nexport const makeStore = (context) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n\r\n    return store;\r\n};\r\n\r\nexport const wrapper = createWrapper(makeStore, { debug: false });\r\n\r\n/*\r\nconst persistConfig = {\r\n    key: 'martfury',\r\n    storage,\r\n    whitelist: ['cart', 'compare', 'auth', 'wishlist'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(\r\n        persistedReducer,\r\n        initialState,\r\n        bindMiddleware([sagaMiddleware])\r\n    );\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nexport default configureStore;\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}